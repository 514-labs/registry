{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/apps/connectors-docs/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getGithubStars as '008a9ddd49e1add4a7e140b1a38503d2c9a754ab58'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/apps/connectors-docs/app/discover/DiscoverGrid.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/connectors-docs/app/discover/DiscoverGrid.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/connectors-docs/app/discover/DiscoverGrid.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oZAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsT,GACnV,oFACA","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/apps/connectors-docs/app/discover/DiscoverGrid.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/connectors-docs/app/discover/DiscoverGrid.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/connectors-docs/app/discover/DiscoverGrid.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oZAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/packages/ui/src/components/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,qZAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,qIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/apps/connectors-docs/components/pagefind-meta.tsx"],"sourcesContent":["export function PagefindMeta({ type }: { type: string }) {\n  return (\n    <span\n      data-pagefind-filter={`type:${type}`}\n      className=\"hidden\"\n      aria-hidden=\"true\"\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS,aAAa,EAAE,IAAI,EAAoB;IACrD,qBACE,qZAAC;QACC,wBAAsB,CAAC,KAAK,EAAE,MAAM;QACpC,WAAU;QACV,eAAY;;;;;;AAGlB","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/packages/registry/src/connectors.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport { existsSync, readFileSync, readdirSync, statSync, Dirent } from \"fs\";\nimport { join, resolve } from \"path\";\nimport type {\n  ConnectorRootMeta,\n  ProviderMeta,\n  RegistryConnector,\n} from \"./types\";\n\n// Resolve the monorepo root by walking up from the current working directory\nfunction findMonorepoRoot(startDir: string): string | undefined {\n  let dir = startDir;\n  for (let i = 0; i < 7; i += 1) {\n    const candidate = join(dir, \"pnpm-workspace.yaml\");\n    if (existsSync(candidate)) return dir;\n    const parent = resolve(dir, \"..\");\n    if (parent === dir) break;\n    dir = parent;\n  }\n  return undefined;\n}\n\nfunction findUpwardsForDir(\n  startDir: string,\n  targetDirName: string\n): string | undefined {\n  let dir = startDir;\n  for (let i = 0; i < 10; i += 1) {\n    const candidate = join(dir, targetDirName);\n    if (existsSync(candidate)) return candidate;\n    const parent = resolve(dir, \"..\");\n    if (parent === dir) break;\n    dir = parent;\n  }\n  return undefined;\n}\n\nfunction resolveConnectorsRegistryDir(): string {\n  // 1) Explicit override\n  const fromEnv = process.env.CONNECTORS_REGISTRY_DIR;\n  if (fromEnv && existsSync(fromEnv)) return fromEnv;\n\n  // 2) Monorepo root (during local/dev builds)\n  const mono = findMonorepoRoot(process.cwd());\n  if (mono) {\n    const p = join(mono, \"connector-registry\");\n    if (existsSync(p)) return p;\n  }\n\n  // 3) Look upwards from CWD and from this file's dir (for standalone/serverless)\n  const fromCwd = findUpwardsForDir(process.cwd(), \"connector-registry\");\n  if (fromCwd) return fromCwd;\n  const fromHere = findUpwardsForDir(__dirname, \"connector-registry\");\n  if (fromHere) return fromHere;\n\n  // 4) Fallback to CWD/connector-registry (may not exist, but keeps path consistent)\n  return join(process.cwd(), \"connector-registry\");\n}\n\nfunction readJsonSafe<T>(filePath: string): T | undefined {\n  try {\n    if (!existsSync(filePath)) return undefined;\n    const raw = readFileSync(filePath, \"utf-8\");\n    return JSON.parse(raw) as T;\n  } catch {\n    return undefined;\n  }\n}\n\nexport function getConnectorsRegistryPath(): string {\n  return resolveConnectorsRegistryDir();\n}\n\nexport function listConnectorIds(): string[] {\n  const registryDir = getConnectorsRegistryPath();\n  const entries: Dirent[] = readdirSync(registryDir, {\n    withFileTypes: true,\n  });\n  return entries\n    .filter((entry: Dirent) => entry.isDirectory())\n    .map((entry: Dirent) => entry.name)\n    .filter((name: string) => !name.startsWith(\".\") && !name.startsWith(\"_\"))\n    .filter((name: string) => /^[a-zA-Z0-9_-]+$/.test(name));\n}\n\nexport function readConnector(\n  connectorId: string\n): RegistryConnector | undefined {\n  const registryDir = getConnectorsRegistryPath();\n  const connectorPath = join(registryDir, connectorId);\n  if (!existsSync(connectorPath) || !statSync(connectorPath).isDirectory())\n    return undefined;\n\n  const rootMeta = readJsonSafe<ConnectorRootMeta>(\n    join(connectorPath, \"_meta\", \"connector.json\")\n  );\n  const versionDirs: string[] = readdirSync(connectorPath, {\n    withFileTypes: true,\n  })\n    .filter((entry: Dirent) => entry.isDirectory() && entry.name !== \"_meta\")\n    .map((entry: Dirent) => entry.name);\n\n  const providers = versionDirs.flatMap((versionId: string) => {\n    const versionPath = join(connectorPath, versionId);\n    const providerDirs: string[] = readdirSync(versionPath, {\n      withFileTypes: true,\n    })\n      .filter(\n        (entry: Dirent) => entry.isDirectory() && !entry.name.startsWith(\"_\")\n      )\n      .map((entry: Dirent) => entry.name);\n\n    return providerDirs.map((authorId: string) => {\n      const providerPath = join(versionPath, authorId);\n      const providerMeta = readJsonSafe<ProviderMeta>(\n        join(providerPath, \"_meta\", \"connector.json\")\n      );\n\n      const implementations: Array<{\n        language: string;\n        implementation: string;\n        path: string;\n      }> = readdirSync(providerPath, { withFileTypes: true })\n        .filter(\n          (entry: Dirent) => entry.isDirectory() && !entry.name.startsWith(\"_\")\n        )\n        .flatMap((languageDir: Dirent) => {\n          const languagePath = join(providerPath, languageDir.name);\n          const subDirs = readdirSync(languagePath, {\n            withFileTypes: true,\n          }).filter(\n            (sub: Dirent) => sub.isDirectory() && !sub.name.startsWith(\"_\")\n          );\n\n          if (subDirs.length === 0) {\n            return [\n              {\n                language: languageDir.name,\n                implementation: \"default\",\n                path: languagePath,\n              },\n            ];\n          }\n\n          return subDirs.map((implDir: Dirent) => ({\n            language: languageDir.name,\n            implementation: implDir.name,\n            path: join(languagePath, implDir.name),\n          }));\n        });\n\n      return {\n        authorId,\n        path: providerPath,\n        meta: providerMeta,\n        implementations,\n      };\n    });\n  });\n\n  return {\n    connectorId,\n    root: { path: connectorPath, meta: rootMeta },\n    providers,\n  };\n}\n\nexport function listConnectors(): RegistryConnector[] {\n  return listConnectorIds()\n    .map((id) => readConnector(id))\n    .filter((c): c is RegistryConnector => Boolean(c));\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/packages/registry/src/github.ts"],"sourcesContent":["import type { ProviderMeta } from \"./types\";\n\ntype ParsedIssueUrl = {\n  owner: string;\n  repo: string;\n  issueNumber: number;\n};\n\nexport function parseIssueUrl(issueUrl: string): ParsedIssueUrl | undefined {\n  try {\n    const url = new URL(issueUrl);\n    const parts = url.pathname.split(\"/\").filter(Boolean);\n    // Expected: /{owner}/{repo}/issues/{number}\n    const issuesIndex = parts.indexOf(\"issues\");\n    if (issuesIndex === -1 || issuesIndex + 1 >= parts.length) return undefined;\n    const owner = parts[0];\n    const repo = parts[1];\n    const issueNumber = Number(parts[issuesIndex + 1]);\n    if (!owner || !repo || !Number.isFinite(issueNumber)) return undefined;\n    return { owner, repo, issueNumber };\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function getIssueThumbsUpCountFromUrl(\n  issueUrl: string,\n  options?: { token?: string }\n): Promise<number> {\n  const parsed = parseIssueUrl(issueUrl);\n  if (!parsed) return 0;\n\n  const token = (options?.token ?? process.env.GITHUB_PAT ?? \"\").trim();\n  const res = await fetch(\n    `https://api.github.com/repos/${parsed.owner}/${parsed.repo}/issues/${parsed.issueNumber}`,\n    {\n      headers: {\n        Accept: \"application/vnd.github+json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n        \"X-GitHub-Api-Version\": \"2022-11-28\",\n      },\n    }\n  );\n\n  if (!res.ok) return 0;\n  const data = (await res.json()) as {\n    reactions?: Record<string, number>;\n    state?: string;\n  };\n  // Ignore closed issues entirely\n  if ((data.state ?? \"\").toLowerCase() !== \"open\") return 0;\n  return data.reactions?.[\"+1\"] ?? 0;\n}\n\nexport async function getIssueThumbsUpCountFromMeta(\n  providerMeta: ProviderMeta | undefined,\n  language: string,\n  implementation?: string,\n  options?: { token?: string }\n): Promise<number> {\n  const value = providerMeta?.issues?.[language];\n  // Do not use a default implementation; only count when an explicit implementation URL exists\n  let url: string | undefined;\n  if (value && typeof value === \"object\" && implementation) {\n    url = value[implementation];\n  }\n  if (!url) return 0;\n  return getIssueThumbsUpCountFromUrl(url, options);\n}\n\nexport async function getIssuePositiveReactionsCountFromUrl(\n  issueUrl: string,\n  options?: { token?: string }\n): Promise<number> {\n  const parsed = parseIssueUrl(issueUrl);\n  if (!parsed) return 0;\n\n  const token = (options?.token ?? process.env.GITHUB_PAT ?? \"\").trim();\n  const res = await fetch(\n    `https://api.github.com/repos/${parsed.owner}/${parsed.repo}/issues/${parsed.issueNumber}`,\n    {\n      headers: {\n        Accept: \"application/vnd.github+json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n        \"X-GitHub-Api-Version\": \"2022-11-28\",\n      },\n    }\n  );\n\n  if (!res.ok) return 0;\n  const data = (await res.json()) as {\n    reactions?: Record<string, number>;\n    state?: string;\n  };\n  // Ignore closed issues entirely\n  if ((data.state ?? \"\").toLowerCase() !== \"open\") return 0;\n  const thumbsUp = data.reactions?.[\"+1\"] ?? 0;\n  const hearts = data.reactions?.heart ?? 0;\n  return thumbsUp + hearts;\n}\n\nexport async function getIssuePositiveReactionsCountFromMeta(\n  providerMeta: ProviderMeta | undefined,\n  language: string,\n  implementation?: string,\n  options?: { token?: string }\n): Promise<number> {\n  const value = providerMeta?.issues?.[language];\n  // Do not use a default implementation; only count when an explicit implementation URL exists\n  let url: string | undefined;\n  if (value && typeof value === \"object\" && implementation) {\n    url = value[implementation];\n  }\n  if (!url) return 0;\n  return getIssuePositiveReactionsCountFromUrl(url, options);\n}\n\nexport async function getUserAvatar(\n  username: string,\n  options?: { token?: string }\n): Promise<string | null> {\n  if (!username?.trim()) return null;\n\n  const token = (options?.token ?? process.env.GITHUB_PAT ?? \"\").trim();\n  const res = await fetch(`https://api.github.com/users/${username}`, {\n    headers: {\n      Accept: \"application/vnd.github+json\",\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      \"X-GitHub-Api-Version\": \"2022-11-28\",\n    },\n  });\n\n  if (!res.ok) return null;\n  const data = (await res.json()) as { avatar_url?: string };\n  return data.avatar_url ?? null;\n}\n\nexport async function getOrganizationAvatar(\n  org: string,\n  options?: { token?: string }\n): Promise<string | null> {\n  if (!org?.trim()) return null;\n\n  const token = (options?.token ?? process.env.GITHUB_PAT ?? \"\").trim();\n  const res = await fetch(`https://api.github.com/orgs/${org}`, {\n    headers: {\n      Accept: \"application/vnd.github+json\",\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      \"X-GitHub-Api-Version\": \"2022-11-28\",\n    },\n  });\n\n  if (!res.ok) return null;\n  const data = (await res.json()) as { avatar_url?: string };\n  return data.avatar_url ?? null;\n}\n\nexport async function getAuthorAvatar(\n  providerMeta: ProviderMeta | undefined,\n  options?: { token?: string }\n): Promise<string | null> {\n  if (!providerMeta) return null;\n  const override = providerMeta.avatarUrlOverride?.trim();\n  if (override) return override;\n\n  const author = providerMeta.author?.trim();\n  if (!author) return null;\n\n  const type = providerMeta.authorType;\n  if (type === \"organization\") {\n    return getOrganizationAvatar(author, options);\n  }\n  if (type === \"user\") {\n    return getUserAvatar(author, options);\n  }\n  // Fallback: try user first, then org\n  const asUser = await getUserAvatar(author, options);\n  if (asUser) return asUser;\n  return getOrganizationAvatar(author, options);\n}\n\n// ----------------------------------------\n// Connector request issue helpers\n// ----------------------------------------\n\nexport type ConnectorRequest = {\n  identifier: string;\n  name: string;\n  category: string;\n  tags: string[];\n  homepage: string;\n  description: string;\n  issueUrl: string;\n};\n\nfunction safeParseConnectorRequestFromBody(\n  body: string\n): Omit<ConnectorRequest, \"issueUrl\"> | null {\n  try {\n    // Expect a fenced JSON block between our markers\n    const start = body.indexOf(\"<!-- connector-request:start -->\");\n    const end = body.indexOf(\"<!-- connector-request:end -->\");\n    if (start === -1 || end === -1 || end <= start) return null;\n    const between = body.slice(start, end);\n    const fenceStart = between.indexOf(\"```json\");\n    if (fenceStart === -1) return null;\n    const afterFence = between.slice(fenceStart + \"```json\".length);\n    const fenceEnd = afterFence.indexOf(\"```\");\n    if (fenceEnd === -1) return null;\n    const jsonText = afterFence.slice(0, fenceEnd).trim();\n    const parsed = JSON.parse(jsonText) as any;\n    if (parsed && parsed.kind === \"connector-request\") {\n      const identifier = String(parsed.identifier || \"\").trim();\n      const name = String(parsed.name || \"\").trim();\n      const category = String(parsed.category || \"\").trim();\n      const homepage = String(parsed.homepage || \"\").trim();\n      const description = String(parsed.description || \"\").trim();\n      const tags: string[] = Array.isArray(parsed.tags)\n        ? parsed.tags\n            .map((t: unknown) => String(t || \"\").trim())\n            .filter(Boolean)\n        : [];\n      if (!identifier || !name || !category || !homepage) return null;\n      return { identifier, name, category, tags, homepage, description };\n    }\n  } catch {}\n  return null;\n}\n\nexport async function listConnectorRequestsFromIssues(options?: {\n  owner?: string;\n  repo?: string;\n  token?: string;\n  state?: \"open\" | \"closed\" | \"all\";\n}): Promise<ConnectorRequest[]> {\n  const owner = (\n    options?.owner ??\n    process.env.CONNECTOR_REQUESTS_OWNER ??\n    \"514-labs\"\n  ).trim();\n  const repo = (\n    options?.repo ??\n    process.env.CONNECTOR_REQUESTS_REPO ??\n    \"factory\"\n  ).trim();\n  const token = (options?.token ?? process.env.GITHUB_PAT ?? \"\").trim();\n  const state = options?.state ?? \"open\";\n\n  // Search by a title prefix for efficiency and then fetch bodies\n  // We use pagination with a reasonable upper bound\n  const results: ConnectorRequest[] = [];\n  let page = 1;\n  const perPage = 50;\n  for (let i = 0; i < 5; i += 1) {\n    const searchUrl = new URL(\"https://api.github.com/search/issues\");\n    const q = `repo:${owner}/${repo} type:issue in:title \"Connector request:\" state:${state}`;\n    searchUrl.searchParams.set(\"q\", q);\n    searchUrl.searchParams.set(\"per_page\", String(perPage));\n    searchUrl.searchParams.set(\"page\", String(page));\n    const searchRes = await fetch(searchUrl.toString(), {\n      headers: {\n        Accept: \"application/vnd.github+json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n        \"X-GitHub-Api-Version\": \"2022-11-28\",\n      },\n    });\n    if (!searchRes.ok) break;\n    const data = (await searchRes.json()) as {\n      items?: Array<{\n        html_url: string;\n        number: number;\n        title: string;\n        state: string;\n      }>;\n      total_count?: number;\n    };\n    const items = data.items ?? [];\n    if (items.length === 0) break;\n\n    // Fetch each issue to get the full body\n    const pageResults = await Promise.all(\n      items.map(async (item) => {\n        const parsed = parseIssueUrl(item.html_url);\n        if (!parsed) return null;\n        const issueRes = await fetch(\n          `https://api.github.com/repos/${parsed.owner}/${parsed.repo}/issues/${parsed.issueNumber}`,\n          {\n            headers: {\n              Accept: \"application/vnd.github+json\",\n              ...(token ? { Authorization: `Bearer ${token}` } : {}),\n              \"X-GitHub-Api-Version\": \"2022-11-28\",\n            },\n          }\n        );\n        if (!issueRes.ok) return null;\n        const issue = (await issueRes.json()) as {\n          body?: string;\n          html_url?: string;\n          state?: string;\n        };\n        if ((issue.state ?? \"\").toLowerCase() !== \"open\") return null;\n        const parsedBody = safeParseConnectorRequestFromBody(issue.body ?? \"\");\n        if (!parsedBody) return null;\n        return { ...parsedBody, issueUrl: issue.html_url ?? item.html_url };\n      })\n    );\n    for (const r of pageResults) if (r) results.push(r);\n    if (items.length < perPage) break;\n    page += 1;\n  }\n\n  // Deduplicate by identifier (keep first occurrence)\n  const dedupedMap = new Map<string, ConnectorRequest>();\n  for (const r of results) {\n    if (!dedupedMap.has(r.identifier)) dedupedMap.set(r.identifier, r);\n  }\n  return Array.from(dedupedMap.values());\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/packages/registry/src/index.ts"],"sourcesContent":["export {\n  parseIssueUrl,\n  getIssueThumbsUpCountFromUrl,\n  getIssueThumbsUpCountFromMeta,\n  getIssuePositiveReactionsCountFromUrl,\n  getIssuePositiveReactionsCountFromMeta,\n  getUserAvatar,\n  getOrganizationAvatar,\n  getAuthorAvatar,\n  listConnectorRequestsFromIssues,\n  type ConnectorRequest,\n} from \"./github\";\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/apps/connectors-docs/lib/discover.ts"],"sourcesContent":["import { listConnectors } from \"@workspace/registry/connectors\";\nimport {\n  getIssuePositiveReactionsCountFromMeta,\n  getIssuePositiveReactionsCountFromUrl,\n  listConnectorRequestsFromIssues,\n} from \"@workspace/registry\";\nimport type { ConnectorRootMeta } from \"@workspace/registry/types\";\n\nexport type DiscoverConnector = {\n  name: string;\n  description: string;\n  icon: string;\n  tags: string[];\n  href: string;\n  sourceType?: string;\n  extraction?: \"batch\" | \"stream\";\n  domains?: string[];\n  language?: string;\n  languages?: string[];\n  reactions?: number;\n  creatorAvatarUrl?: string;\n  creatorAvatarUrls?: string[];\n  comingSoon?: boolean;\n  implementationCount?: number;\n};\n\n// Filter and label helpers (case-insensitive)\nconst KNOWN_DOMAIN_TAGS_LOWER = new Set<string>([\n  \"ecommerce\",\n  \"observability\",\n  \"product analytics\",\n  \"cdp\",\n  \"analytics\",\n  \"finance\",\n  \"marketing\",\n  \"sales\",\n]);\nconst OPERATIONAL_TAGS_LOWER = new Set<string>([\"saas\", \"database\", \"api\"]);\n\nconst SPECIAL_CAPS: Record<string, string> = {\n  api: \"API\",\n  cdp: \"CDP\",\n  cdc: \"CDC\",\n  saas: \"SaaS\",\n};\n\nfunction formatLabel(tag: string): string {\n  return tag\n    .split(\" \")\n    .map((word) => {\n      const lower = word.toLowerCase();\n      if (SPECIAL_CAPS[lower]) return SPECIAL_CAPS[lower];\n      return `${lower.charAt(0).toUpperCase()}${lower.slice(1)}`;\n    })\n    .join(\" \");\n}\n\nexport async function buildDiscoverConnectors(): Promise<DiscoverConnector[]> {\n  const registry = listConnectors();\n  const connectors = await Promise.all(\n    registry.map(async (conn) => {\n      const meta = (conn.root.meta ?? {}) as ConnectorRootMeta;\n      const displayName = (meta.name ?? conn.connectorId) as string;\n      const description = (meta.description ?? \"\") as string;\n      const rawTags = ((meta.tags ?? []) as string[]).filter(Boolean);\n      const category = ((meta.category ?? \"\") as string).toLowerCase();\n\n      // Normalize tags for comparisons\n      const tagsLower = rawTags.map((t) => t.toLowerCase());\n\n      // Derivations\n      const domainsLower = rawTags\n        .filter((t) => KNOWN_DOMAIN_TAGS_LOWER.has(t.toLowerCase()))\n        .map((t) => t.toLowerCase());\n      const domains = Array.from(new Set(domainsLower)).map(formatLabel);\n\n      const otherTagsLower = tagsLower.filter(\n        (t) => !KNOWN_DOMAIN_TAGS_LOWER.has(t) && !OPERATIONAL_TAGS_LOWER.has(t)\n      );\n      const otherTagsUniqueLower = Array.from(new Set(otherTagsLower));\n      const displayTags = otherTagsUniqueLower.map(formatLabel);\n\n      const extraction = ((): \"batch\" | \"stream\" => {\n        if (tagsLower.includes(\"cdc\") || category === \"stream\") return \"stream\";\n        return \"batch\";\n      })();\n\n      // Primary provider and implementation details\n      const firstProvider = conn.providers[0];\n      const language = firstProvider?.implementations?.[0]?.language;\n      const implementation =\n        firstProvider?.implementations?.[0]?.implementation;\n      const version = firstProvider?.path.split(\"/\").slice(-2)[0];\n\n      // Collect all unique languages across providers/implementations\n      const languages = Array.from(\n        new Set(\n          conn.providers.flatMap((p) =>\n            p.implementations.map((i) => i.language)\n          )\n        )\n      );\n      const comingSoon = languages.length === 0;\n      const implementationCount = conn.providers.reduce(\n        (sum, p) => sum + p.implementations.length,\n        0\n      );\n\n      // Aggregate reactions across all provider issue URLs\n      const issueUrlsRaw: Array<string | undefined> = conn.providers.flatMap(\n        (p) => {\n          const issues = p.meta?.issues ?? {};\n          return Object.values(issues).flatMap((v) => {\n            if (typeof v === \"string\") {\n              // Ignore legacy string mapping (implicit default)\n              return [] as string[];\n            }\n            // Only include explicit implementation URLs; skip any \"default\" key\n            return Object.entries(v || {})\n              .filter(([implKey]) => implKey !== \"default\")\n              .map(([, url]) => url);\n          });\n        }\n      );\n      const uniqueIssueUrls = Array.from(\n        new Set(issueUrlsRaw.filter((u): u is string => Boolean(u)))\n      );\n      let reactions = 0;\n      if (uniqueIssueUrls.length > 0) {\n        const counts = await Promise.all(\n          uniqueIssueUrls.map((u) => getIssuePositiveReactionsCountFromUrl(u))\n        );\n        reactions = counts.reduce((a, b) => a + (b || 0), 0);\n      } else if (firstProvider) {\n        reactions = await getIssuePositiveReactionsCountFromMeta(\n          firstProvider.meta,\n          language ?? \"\",\n          implementation\n        );\n      }\n\n      // Creator avatars\n      const override = firstProvider?.meta?.avatarUrlOverride?.trim();\n      const primaryName = firstProvider?.authorId;\n      const secondaryName = firstProvider?.meta?.author?.trim();\n      const creatorAvatarUrl =\n        override ||\n        (primaryName ? `https://github.com/${primaryName}.png` : undefined) ||\n        (secondaryName ? `https://github.com/${secondaryName}.png` : undefined);\n\n      const creatorAvatarUrls = Array.from(\n        new Map(\n          conn.providers.map((p) => {\n            const o = p.meta?.avatarUrlOverride?.trim();\n            const primary = p.authorId;\n            const secondary = p.meta?.author?.trim();\n            const url =\n              o ||\n              (primary ? `https://github.com/${primary}.png` : undefined) ||\n              (secondary ? `https://github.com/${secondary}.png` : undefined);\n            return [p.authorId, url] as const;\n          })\n        ).values()\n      )\n        .filter((u): u is string => Boolean(u))\n        .slice(0, 10);\n\n      const deepHref =\n        firstProvider && language && implementation && version\n          ? `/connectors/${conn.connectorId}/${version}/${firstProvider.authorId}/${language}/${implementation}`\n          : undefined;\n\n      return {\n        name: displayName,\n        description,\n        tags: displayTags,\n        icon: `connector-logos/${conn.connectorId}.png`,\n        href: deepHref ?? \"#\",\n        sourceType: category ? formatLabel(category) : undefined,\n        extraction,\n        domains,\n        language: language ? formatLabel(language) : undefined,\n        languages: languages.map(formatLabel),\n        comingSoon,\n        implementationCount,\n        reactions,\n        creatorAvatarUrl,\n        creatorAvatarUrls,\n      } satisfies DiscoverConnector;\n    })\n  );\n\n  // Merge in requested connectors from GitHub issues (that don't exist in the registry yet)\n  const existingIds = new Set(registry.map((c) => c.connectorId));\n  try {\n    const requests = await listConnectorRequestsFromIssues({ state: \"open\" });\n    const requestedConnectors: DiscoverConnector[] = await Promise.all(\n      requests\n        .filter((r) => !existingIds.has(r.identifier))\n        .map(async (r) => {\n          const reactions = await getIssuePositiveReactionsCountFromUrl(\n            r.issueUrl\n          );\n          return {\n            name: r.name,\n            description: r.description,\n            tags: (r.tags || []).map(formatLabel),\n            icon: `connector-logos/${r.identifier}.png`,\n            href: r.issueUrl,\n            sourceType: r.category ? formatLabel(r.category) : undefined,\n            extraction: \"batch\",\n            domains: [],\n            languages: [],\n            comingSoon: true,\n            implementationCount: 0,\n            reactions,\n          } satisfies DiscoverConnector;\n        })\n    );\n    return [...connectors, ...requestedConnectors];\n  } catch {\n    // If listing requests fails, fall back to registry-only\n    return connectors;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexander/Documents/factory/apps/connectors-docs/app/page.tsx"],"sourcesContent":["import DiscoverGrid from \"@/app/discover/DiscoverGrid\";\nimport Link from \"next/link\";\nimport { Button } from \"@ui/components/button\";\nimport { Badge } from \"@ui/components/badge\";\nimport { PagefindMeta } from \"@/components/pagefind-meta\";\nimport { buildDiscoverConnectors } from \"@/lib/discover\";\nimport { Wrench, BadgeCheck, Activity, ScrollText } from \"lucide-react\";\n\nconst valueProps = [\n  {\n    text: \"Easy to tweak for your use case\",\n    icon: <Wrench />,\n  },\n  {\n    text: \"Best practices backed in\",\n    icon: <BadgeCheck />,\n  },\n  {\n    text: \"Easy to monitor, debug and scale\",\n    icon: <Activity />,\n  },\n  {\n    text: \"Own it. MIT License Forever\",\n    icon: <ScrollText />,\n  },\n];\n\nfunction Hero() {\n  return (\n    <div className=\"grid grid-cols-2 container max-w-6xl mx-auto gap-5 py-16\">\n      <div className=\"flex flex-col gap-10\">\n        <Badge variant=\"outline\">\n          This Project is a WIP. Join our{\" \"}\n          <Link\n            href=\"https://join.slack.com/t/moose-community/shared_invite/zt-2fjh5n3wz-cnOmM9Xe9DYAgQrNu8xKxg\"\n            className=\"underline\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            slack\n          </Link>{\" \"}\n          to get involved\n        </Badge>\n        <h1 className=\"text-6xl mb-0\">\n          Connectors{\" \"}\n          <span className=\"text-muted-foreground\">as copyable code</span>\n        </h1>\n        <div className=\"flex flex-row gap-5\">\n          <Button asChild>\n            <Link href=\"discover\">All connectors</Link>\n          </Button>\n          <Button asChild variant=\"outline\">\n            <Link href=\"/docs\">Learn More</Link>\n          </Button>\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-10\">\n        <h2 className=\"text-lg text-muted-foreground\">\n          A starter kit for building, testing and sharing analytical connectors\n          for extracting data and metadata from any analytical data system.\n          Heavily inspired by Shadcn/ui .\n        </h2>\n        <div className=\"flex flex-col gap-5 text-lg\">\n          {valueProps.map((prop) => (\n            <div key={prop.text} className=\"flex flex-row gap-5 items-center\">\n              {prop.icon}\n              {prop.text}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default async function Home() {\n  const connectors = await buildDiscoverConnectors();\n\n  return (\n    <div className=\"font-sans items-center justify-items-center min-h-screen space-y-4\">\n      <PagefindMeta type=\"docs\" />\n      <main className=\"flex flex-col items-center sm:items-start\">\n        <Hero />\n        <div className=\"mx-auto w-full max-w-6xl px-4 xl:px-0 py-6\">\n          <DiscoverGrid connectors={connectors} />\n        </div>\n      </main>\n      <footer className=\"flex flex-wrap items-center justify-center py-20\">\n        <span>\n          Inspired by\n          <Link\n            className=\"pl-1 underline\"\n            href=\"https://ui.shadcn.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            shadcn/ui\n          </Link>\n        </span>\n        <span>\n          , Created with ❤️ by the folks at\n          <Link\n            className=\"pl-1 underline\"\n            href=\"https://www.fiveonefour.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            514 Labs\n          </Link>\n        </span>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;AAEA,MAAM,aAAa;IACjB;QACE,MAAM;QACN,oBAAM,qZAAC,0RAAA,CAAA,SAAM;;;;;IACf;IACA;QACE,MAAM;QACN,oBAAM,qZAAC,sSAAA,CAAA,aAAU;;;;;IACnB;IACA;QACE,MAAM;QACN,oBAAM,qZAAC,8RAAA,CAAA,WAAQ;;;;;IACjB;IACA;QACE,MAAM;QACN,oBAAM,qZAAC,sSAAA,CAAA,aAAU;;;;;IACnB;CACD;AAED,SAAS;IACP,qBACE,qZAAC;QAAI,WAAU;;0BACb,qZAAC;gBAAI,WAAU;;kCACb,qZAAC,6IAAA,CAAA,QAAK;wBAAC,SAAQ;;4BAAU;4BACS;0CAChC,qZAAC,mUAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;gCACV,QAAO;gCACP,KAAI;0CACL;;;;;;4BAEO;4BAAI;;;;;;;kCAGd,qZAAC;wBAAG,WAAU;;4BAAgB;4BACjB;0CACX,qZAAC;gCAAK,WAAU;0CAAwB;;;;;;;;;;;;kCAE1C,qZAAC;wBAAI,WAAU;;0CACb,qZAAC,8IAAA,CAAA,SAAM;gCAAC,OAAO;0CACb,cAAA,qZAAC,mUAAA,CAAA,UAAI;oCAAC,MAAK;8CAAW;;;;;;;;;;;0CAExB,qZAAC,8IAAA,CAAA,SAAM;gCAAC,OAAO;gCAAC,SAAQ;0CACtB,cAAA,qZAAC,mUAAA,CAAA,UAAI;oCAAC,MAAK;8CAAQ;;;;;;;;;;;;;;;;;;;;;;;0BAIzB,qZAAC;gBAAI,WAAU;;kCACb,qZAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAK9C,qZAAC;wBAAI,WAAU;kCACZ,WAAW,GAAG,CAAC,CAAC,qBACf,qZAAC;gCAAoB,WAAU;;oCAC5B,KAAK,IAAI;oCACT,KAAK,IAAI;;+BAFF,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;AAS/B;AAEe,eAAe;IAC5B,MAAM,aAAa,MAAM,CAAA,GAAA,6IAAA,CAAA,0BAAuB,AAAD;IAE/C,qBACE,qZAAC;QAAI,WAAU;;0BACb,qZAAC,6JAAA,CAAA,eAAY;gBAAC,MAAK;;;;;;0BACnB,qZAAC;gBAAK,WAAU;;kCACd,qZAAC;;;;;kCACD,qZAAC;wBAAI,WAAU;kCACb,cAAA,qZAAC,8JAAA,CAAA,UAAY;4BAAC,YAAY;;;;;;;;;;;;;;;;;0BAG9B,qZAAC;gBAAO,WAAU;;kCAChB,qZAAC;;4BAAK;0CAEJ,qZAAC,mUAAA,CAAA,UAAI;gCACH,WAAU;gCACV,MAAK;gCACL,QAAO;gCACP,KAAI;0CACL;;;;;;;;;;;;kCAIH,qZAAC;;4BAAK;0CAEJ,qZAAC,mUAAA,CAAA,UAAI;gCACH,WAAU;gCACV,MAAK;gCACL,QAAO;gCACP,KAAI;0CACL;;;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}}]
}